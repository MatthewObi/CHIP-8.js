parser = /*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */
(function() {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.location = location;
    this.name     = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function(expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
          literal: function(expectation) {
            return "\"" + literalEscape(expectation.text) + "\"";
          },

          "class": function(expectation) {
            var escapedParts = "",
                i;

            for (i = 0; i < expectation.parts.length; i++) {
              escapedParts += expectation.parts[i] instanceof Array
                ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
                : classEscape(expectation.parts[i]);
            }

            return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
          },

          any: function(expectation) {
            return "any character";
          },

          end: function(expectation) {
            return "end of input";
          },

          other: function(expectation) {
            return expectation.description;
          }
        };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/"/g,  '\\"')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function classEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/\]/g, '\\]')
        .replace(/\^/g, '\\^')
        .replace(/-/g,  '\\-')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i, j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }
        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ")
            + ", or "
            + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== void 0 ? options : {};

    var peg$FAILED = {},

        peg$startRuleFunctions = { Start: peg$parseStart },
        peg$startRuleFunction  = peg$parseStart,

        peg$c0 = function() { return assemble(program); },
        peg$c1 = function(head, tail) {
              return tail.reduce(function(result, element) {
                return program.push(element[1]);
              }, head);
            },
        peg$c2 = "\n",
        peg$c3 = peg$literalExpectation("\n", false),
        peg$c4 = function(instr) { offset += 2; return instr; },
        peg$c5 = "byte",
        peg$c6 = peg$literalExpectation("byte", false),
        peg$c7 = function(v) { 
            var obj = {'offset': offset, 'value':v & 0xFF, 'byte':1};
          	offset++; 
            return obj; 
          },
        peg$c8 = function(lbl) { 
            labels[lbl] = offset;
            return { label: lbl }; 
          },
        peg$c9 = function() { return {'offset': offset}; },
        peg$c10 = ":",
        peg$c11 = peg$literalExpectation(":", false),
        peg$c12 = function(label) { return '@' + label; },
        peg$c13 = "@",
        peg$c14 = peg$literalExpectation("@", false),
        peg$c15 = "+",
        peg$c16 = peg$literalExpectation("+", false),
        peg$c17 = "-",
        peg$c18 = peg$literalExpectation("-", false),
        peg$c19 = function(head, tail) {
              return tail.reduce(function(result, element) {
                if (element[1] === "+") { return result + element[3]; }
                if (element[1] === "-") { return result - element[3]; }
              }, head);
            },
        peg$c20 = "*",
        peg$c21 = peg$literalExpectation("*", false),
        peg$c22 = "/",
        peg$c23 = peg$literalExpectation("/", false),
        peg$c24 = function(head, tail) {
              return tail.reduce(function(result, element) {
                if (element[1] === "*") { return result * element[3]; }
                if (element[1] === "/") { return result / element[3]; }
              }, head);
            },
        peg$c25 = "(",
        peg$c26 = peg$literalExpectation("(", false),
        peg$c27 = ")",
        peg$c28 = peg$literalExpectation(")", false),
        peg$c29 = function(expr) { return expr; },
        peg$c30 = "cls",
        peg$c31 = peg$literalExpectation("cls", false),
        peg$c32 = function() { return {'offset': offset, 'value':0x00E0}; },
        peg$c33 = "ret",
        peg$c34 = peg$literalExpectation("ret", false),
        peg$c35 = function() { return {'offset': offset, 'value':0x00EE}; },
        peg$c36 = "word",
        peg$c37 = peg$literalExpectation("word", false),
        peg$c38 = function(v) {
          	return {'offset': offset, 'value':v & 0xFFFF};
          },
        peg$c39 = "ld",
        peg$c40 = peg$literalExpectation("ld", false),
        peg$c41 = "v",
        peg$c42 = peg$literalExpectation("v", false),
        peg$c43 = /^[A-Fa-f0-9]/,
        peg$c44 = peg$classExpectation([["A", "F"], ["a", "f"], ["0", "9"]], false, false),
        peg$c45 = ",",
        peg$c46 = peg$literalExpectation(",", false),
        peg$c47 = function(rx, ry) { 
          	var val = 0x8000 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c48 = function(r, v) { 
          	var val = 0x6000 | (parseInt(r, 16) << 8) | (v & 0xFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c49 = "dt",
        peg$c50 = peg$literalExpectation("dt", false),
        peg$c51 = function(r) { 
          	var val = 0xF007 | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c52 = "k",
        peg$c53 = peg$literalExpectation("k", false),
        peg$c54 = function(r) { 
          	var val = 0xF00A | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c55 = "i",
        peg$c56 = peg$literalExpectation("i", false),
        peg$c57 = function(ptr) { 
          	return {'offset': offset, 'value': 0xA000, 'ptr': ptr }; 
          },
        peg$c58 = function(v) { 
          	var val = 0xA000 | (v & 0xFFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c59 = function(r) { 
          	var val = 0xF015 | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c60 = "st",
        peg$c61 = peg$literalExpectation("st", false),
        peg$c62 = function(r) { 
          	var val = 0xF018 | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c63 = "f",
        peg$c64 = peg$literalExpectation("f", false),
        peg$c65 = function(r) { 
          	var val = 0xF029 | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c66 = "b",
        peg$c67 = peg$literalExpectation("b", false),
        peg$c68 = function(r) { 
          	var val = 0xF033 | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c69 = "[i]",
        peg$c70 = peg$literalExpectation("[i]", false),
        peg$c71 = function(rx) { 
          	var val = 0xF055 | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c72 = function(rx) { 
          	var val = 0xF065 | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c73 = "add",
        peg$c74 = peg$literalExpectation("add", false),
        peg$c75 = function(r, v) { 
          	var val = 0x7000 | (parseInt(r, 16) << 8) | (v & 0xFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c76 = function(r) { 
          	var val = 0xF01E | (parseInt(r, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c77 = "se",
        peg$c78 = peg$literalExpectation("se", false),
        peg$c79 = function(r, v) { 
          	var val = 0x3000 | (parseInt(r, 16) << 8) | (v & 0xFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c80 = "sne",
        peg$c81 = peg$literalExpectation("sne", false),
        peg$c82 = function(r, v) { 
          	var val = 0x4000 | (parseInt(r, 16) << 8) | (v & 0xFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c83 = function(rx, ry) { 
          	var val = 0x5000 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c84 = "or",
        peg$c85 = peg$literalExpectation("or", false),
        peg$c86 = function(rx, ry) { 
          	var val = 0x8001 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c87 = "and",
        peg$c88 = peg$literalExpectation("and", false),
        peg$c89 = function(rx, ry) { 
          	var val = 0x8002 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c90 = "xor",
        peg$c91 = peg$literalExpectation("xor", false),
        peg$c92 = function(rx, ry) { 
          	var val = 0x8003 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c93 = function(rx, ry) { 
          	var val = 0x8004 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c94 = "subn",
        peg$c95 = peg$literalExpectation("subn", false),
        peg$c96 = function(rx, ry) { 
          	var val = 0x8007 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c97 = "shr",
        peg$c98 = peg$literalExpectation("shr", false),
        peg$c99 = function(rx) { 
          	var val = 0x8006 | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c100 = "sub",
        peg$c101 = peg$literalExpectation("sub", false),
        peg$c102 = function(rx, ry) { 
          	var val = 0x8005 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c103 = "shl",
        peg$c104 = peg$literalExpectation("shl", false),
        peg$c105 = function(rx) { 
          	var val = 0x800E | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c106 = function(rx, ry) { 
          	var val = 0x9000 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c107 = "drw",
        peg$c108 = peg$literalExpectation("drw", false),
        peg$c109 = function(rx, ry, v) { 
          	var val = 0xD000 | (parseInt(rx, 16) << 8) | (parseInt(ry, 16) << 4) | (v & 0xF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c110 = "rnd",
        peg$c111 = peg$literalExpectation("rnd", false),
        peg$c112 = function(r, v) { 
          	var val = 0xC000 | (parseInt(r, 16) << 8) | (v & 0xFF);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c113 = "skp",
        peg$c114 = peg$literalExpectation("skp", false),
        peg$c115 = function(rx) { 
          	var val = 0xE09E | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c116 = "sknp",
        peg$c117 = peg$literalExpectation("sknp", false),
        peg$c118 = function(rx) { 
          	var val = 0xE0A1 | (parseInt(rx, 16) << 8);
          	return {'offset': offset, 'value': val }; 
          },
        peg$c119 = "call",
        peg$c120 = peg$literalExpectation("call", false),
        peg$c121 = function(ptr) { return {'offset': offset, 'value':0x2000, 'ptr': ptr}; },
        peg$c122 = function(v) { return {'offset': offset, 'value':0x2000|(v&0xFFF)}; },
        peg$c123 = "jp",
        peg$c124 = peg$literalExpectation("jp", false),
        peg$c125 = function(ptr) { return {'offset': offset, 'value':0x1000, 'ptr': ptr}; },
        peg$c126 = function(v) { return {'offset': offset, 'value':0x1000|(v&0xFFF)}; },
        peg$c127 = "v0",
        peg$c128 = peg$literalExpectation("v0", false),
        peg$c129 = function(ptr) { return {'offset': offset, 'value':0xB000, 'ptr': ptr}; },
        peg$c130 = function(v) { return {'offset': offset, 'value':0xB000 | (v & 0xFFF) }; },
        peg$c131 = peg$otherExpectation("string"),
        peg$c132 = /^[_A-Za-z]/,
        peg$c133 = peg$classExpectation(["_", ["A", "Z"], ["a", "z"]], false, false),
        peg$c134 = /^[_A-Za-z0-9]/,
        peg$c135 = peg$classExpectation(["_", ["A", "Z"], ["a", "z"], ["0", "9"]], false, false),
        peg$c136 = function(str) { return text(); },
        peg$c137 = peg$otherExpectation("integer"),
        peg$c138 = "0x",
        peg$c139 = peg$literalExpectation("0x", false),
        peg$c140 = /^[0-9A-Fa-f]/,
        peg$c141 = peg$classExpectation([["0", "9"], ["A", "F"], ["a", "f"]], false, false),
        peg$c142 = function() { return parseInt(text(), 16); },
        peg$c143 = "0",
        peg$c144 = peg$literalExpectation("0", false),
        peg$c145 = /^[0-1]/,
        peg$c146 = peg$classExpectation([["0", "1"]], false, false),
        peg$c147 = function() { return parseInt(text(), 2); },
        peg$c148 = /^[0-9]/,
        peg$c149 = peg$classExpectation([["0", "9"]], false, false),
        peg$c150 = function() { return parseInt(text(), 10); },
        peg$c151 = peg$otherExpectation("comment"),
        peg$c152 = ";",
        peg$c153 = peg$literalExpectation(";", false),
        peg$c154 = /^[^\n]/,
        peg$c155 = peg$classExpectation(["\n"], true, false),
        peg$c156 = peg$otherExpectation("whitespace"),
        peg$c157 = /^[ \t\r]/,
        peg$c158 = peg$classExpectation([" ", "\t", "\r"], false, false),

        peg$currPos          = 0,
        peg$savedPos         = 0,
        peg$posDetailsCache  = [{ line: 1, column: 1 }],
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$savedPos, peg$currPos);
    }

    function location() {
      return peg$computeLocation(peg$savedPos, peg$currPos);
    }

    function expected(description, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildStructuredError(
        [peg$otherExpectation(description)],
        input.substring(peg$savedPos, peg$currPos),
        location
      );
    }

    function error(message, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildSimpleError(message, location);
    }

    function peg$literalExpectation(text, ignoreCase) {
      return { type: "literal", text: text, ignoreCase: ignoreCase };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
    }

    function peg$anyExpectation() {
      return { type: "any" };
    }

    function peg$endExpectation() {
      return { type: "end" };
    }

    function peg$otherExpectation(description) {
      return { type: "other", description: description };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos], p;

      if (details) {
        return details;
      } else {
        p = pos - 1;
        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line:   details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails   = peg$computePosDetails(endPos);

      return {
        start: {
          offset: startPos,
          line:   startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line:   endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(
        peg$SyntaxError.buildMessage(expected, found),
        expected,
        found,
        location
      );
    }

    function peg$parseStart() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseProgram();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c0();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseProgram() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$parseLine();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseLine();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseLine();
            if (s5 !== peg$FAILED) {
              s4 = [s4, s5];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c1(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseLine() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$parseInstruction();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseComment();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 10) {
              s4 = peg$c2;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c3); }
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c4(s1);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 4) === peg$c5) {
          s1 = peg$c5;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c6); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            s3 = peg$parseInteger();
            if (s3 !== peg$FAILED) {
              s4 = peg$parse_();
              if (s4 !== peg$FAILED) {
                s5 = peg$parseComment();
                if (s5 === peg$FAILED) {
                  s5 = null;
                }
                if (s5 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 10) {
                    s6 = peg$c2;
                    peg$currPos++;
                  } else {
                    s6 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c3); }
                  }
                  if (s6 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c7(s3);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseLabel();
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseComment();
              if (s3 === peg$FAILED) {
                s3 = null;
              }
              if (s3 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 10) {
                  s4 = peg$c2;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c3); }
                }
                if (s4 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c8(s1);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parse_();
            if (s1 !== peg$FAILED) {
              s2 = peg$parseComment();
              if (s2 === peg$FAILED) {
                s2 = null;
              }
              if (s2 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 10) {
                  s3 = peg$c2;
                  peg$currPos++;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c3); }
                }
                if (s3 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c9();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
      }

      return s0;
    }

    function peg$parseLabel() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseString();
      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 58) {
          s2 = peg$c10;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c11); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c12(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseLabelPtr() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 64) {
        s1 = peg$c13;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c14); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseString();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c12(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseTerm();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 43) {
            s5 = peg$c15;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c16); }
          }
          if (s5 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 45) {
              s5 = peg$c17;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c18); }
            }
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseTerm();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 43) {
              s5 = peg$c15;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c16); }
            }
            if (s5 === peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 45) {
                s5 = peg$c17;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c18); }
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseTerm();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$FAILED;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c19(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseTerm() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseFactor();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 42) {
            s5 = peg$c20;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c21); }
          }
          if (s5 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 47) {
              s5 = peg$c22;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c23); }
            }
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseFactor();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 42) {
              s5 = peg$c20;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c21); }
            }
            if (s5 === peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 47) {
                s5 = peg$c22;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c23); }
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseFactor();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$FAILED;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c24(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFactor() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 40) {
        s1 = peg$c25;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c26); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 41) {
                s5 = peg$c27;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c28); }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c29(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parseInteger();
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 64) {
            s0 = peg$c13;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c14); }
          }
        }
      }

      return s0;
    }

    function peg$parseInstruction() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c30) {
          s2 = peg$c30;
          peg$currPos += 3;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c31); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parse_();
        if (s1 !== peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c33) {
            s2 = peg$c33;
            peg$currPos += 3;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c34); }
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c35();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parse_();
          if (s1 !== peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c36) {
              s2 = peg$c36;
              peg$currPos += 4;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c37); }
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parse_();
              if (s3 !== peg$FAILED) {
                s4 = peg$parseExpression();
                if (s4 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c38(s4);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parse_();
            if (s1 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c39) {
                s2 = peg$c39;
                peg$currPos += 2;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c40); }
              }
              if (s2 !== peg$FAILED) {
                s3 = peg$parse_();
                if (s3 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 118) {
                    s4 = peg$c41;
                    peg$currPos++;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c42); }
                  }
                  if (s4 !== peg$FAILED) {
                    if (peg$c43.test(input.charAt(peg$currPos))) {
                      s5 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s5 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c44); }
                    }
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parse_();
                      if (s6 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 44) {
                          s7 = peg$c45;
                          peg$currPos++;
                        } else {
                          s7 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c46); }
                        }
                        if (s7 !== peg$FAILED) {
                          s8 = peg$parse_();
                          if (s8 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 118) {
                              s9 = peg$c41;
                              peg$currPos++;
                            } else {
                              s9 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c42); }
                            }
                            if (s9 !== peg$FAILED) {
                              if (peg$c43.test(input.charAt(peg$currPos))) {
                                s10 = input.charAt(peg$currPos);
                                peg$currPos++;
                              } else {
                                s10 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c44); }
                              }
                              if (s10 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c47(s5, s10);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parse_();
              if (s1 !== peg$FAILED) {
                if (input.substr(peg$currPos, 2) === peg$c39) {
                  s2 = peg$c39;
                  peg$currPos += 2;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c40); }
                }
                if (s2 !== peg$FAILED) {
                  s3 = peg$parse_();
                  if (s3 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 118) {
                      s4 = peg$c41;
                      peg$currPos++;
                    } else {
                      s4 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c42); }
                    }
                    if (s4 !== peg$FAILED) {
                      if (peg$c43.test(input.charAt(peg$currPos))) {
                        s5 = input.charAt(peg$currPos);
                        peg$currPos++;
                      } else {
                        s5 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c44); }
                      }
                      if (s5 !== peg$FAILED) {
                        s6 = peg$parse_();
                        if (s6 !== peg$FAILED) {
                          if (input.charCodeAt(peg$currPos) === 44) {
                            s7 = peg$c45;
                            peg$currPos++;
                          } else {
                            s7 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c46); }
                          }
                          if (s7 !== peg$FAILED) {
                            s8 = peg$parse_();
                            if (s8 !== peg$FAILED) {
                              s9 = peg$parseExpression();
                              if (s9 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c48(s5, s9);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parse_();
                if (s1 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c39) {
                    s2 = peg$c39;
                    peg$currPos += 2;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c40); }
                  }
                  if (s2 !== peg$FAILED) {
                    s3 = peg$parse_();
                    if (s3 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 118) {
                        s4 = peg$c41;
                        peg$currPos++;
                      } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c42); }
                      }
                      if (s4 !== peg$FAILED) {
                        if (peg$c43.test(input.charAt(peg$currPos))) {
                          s5 = input.charAt(peg$currPos);
                          peg$currPos++;
                        } else {
                          s5 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c44); }
                        }
                        if (s5 !== peg$FAILED) {
                          s6 = peg$parse_();
                          if (s6 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 44) {
                              s7 = peg$c45;
                              peg$currPos++;
                            } else {
                              s7 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c46); }
                            }
                            if (s7 !== peg$FAILED) {
                              s8 = peg$parse_();
                              if (s8 !== peg$FAILED) {
                                if (input.substr(peg$currPos, 2) === peg$c49) {
                                  s9 = peg$c49;
                                  peg$currPos += 2;
                                } else {
                                  s9 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c50); }
                                }
                                if (s9 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c51(s5);
                                  s0 = s1;
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  s1 = peg$parse_();
                  if (s1 !== peg$FAILED) {
                    if (input.substr(peg$currPos, 2) === peg$c39) {
                      s2 = peg$c39;
                      peg$currPos += 2;
                    } else {
                      s2 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c40); }
                    }
                    if (s2 !== peg$FAILED) {
                      s3 = peg$parse_();
                      if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 118) {
                          s4 = peg$c41;
                          peg$currPos++;
                        } else {
                          s4 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                        }
                        if (s4 !== peg$FAILED) {
                          if (peg$c43.test(input.charAt(peg$currPos))) {
                            s5 = input.charAt(peg$currPos);
                            peg$currPos++;
                          } else {
                            s5 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c44); }
                          }
                          if (s5 !== peg$FAILED) {
                            s6 = peg$parse_();
                            if (s6 !== peg$FAILED) {
                              if (input.charCodeAt(peg$currPos) === 44) {
                                s7 = peg$c45;
                                peg$currPos++;
                              } else {
                                s7 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c46); }
                              }
                              if (s7 !== peg$FAILED) {
                                s8 = peg$parse_();
                                if (s8 !== peg$FAILED) {
                                  if (input.charCodeAt(peg$currPos) === 107) {
                                    s9 = peg$c52;
                                    peg$currPos++;
                                  } else {
                                    s9 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c53); }
                                  }
                                  if (s9 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c54(s5);
                                    s0 = s1;
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    s1 = peg$parse_();
                    if (s1 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 2) === peg$c39) {
                        s2 = peg$c39;
                        peg$currPos += 2;
                      } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c40); }
                      }
                      if (s2 !== peg$FAILED) {
                        s3 = peg$parse_();
                        if (s3 !== peg$FAILED) {
                          if (input.charCodeAt(peg$currPos) === 105) {
                            s4 = peg$c55;
                            peg$currPos++;
                          } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c56); }
                          }
                          if (s4 !== peg$FAILED) {
                            s5 = peg$parse_();
                            if (s5 !== peg$FAILED) {
                              if (input.charCodeAt(peg$currPos) === 44) {
                                s6 = peg$c45;
                                peg$currPos++;
                              } else {
                                s6 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c46); }
                              }
                              if (s6 !== peg$FAILED) {
                                s7 = peg$parse_();
                                if (s7 !== peg$FAILED) {
                                  s8 = peg$parseLabelPtr();
                                  if (s8 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c57(s8);
                                    s0 = s1;
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      s1 = peg$parse_();
                      if (s1 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 2) === peg$c39) {
                          s2 = peg$c39;
                          peg$currPos += 2;
                        } else {
                          s2 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c40); }
                        }
                        if (s2 !== peg$FAILED) {
                          s3 = peg$parse_();
                          if (s3 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 105) {
                              s4 = peg$c55;
                              peg$currPos++;
                            } else {
                              s4 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c56); }
                            }
                            if (s4 !== peg$FAILED) {
                              s5 = peg$parse_();
                              if (s5 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 44) {
                                  s6 = peg$c45;
                                  peg$currPos++;
                                } else {
                                  s6 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                }
                                if (s6 !== peg$FAILED) {
                                  s7 = peg$parse_();
                                  if (s7 !== peg$FAILED) {
                                    s8 = peg$parseExpression();
                                    if (s8 !== peg$FAILED) {
                                      peg$savedPos = s0;
                                      s1 = peg$c58(s8);
                                      s0 = s1;
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        s1 = peg$parse_();
                        if (s1 !== peg$FAILED) {
                          if (input.substr(peg$currPos, 2) === peg$c39) {
                            s2 = peg$c39;
                            peg$currPos += 2;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c40); }
                          }
                          if (s2 !== peg$FAILED) {
                            s3 = peg$parse_();
                            if (s3 !== peg$FAILED) {
                              if (input.substr(peg$currPos, 2) === peg$c49) {
                                s4 = peg$c49;
                                peg$currPos += 2;
                              } else {
                                s4 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c50); }
                              }
                              if (s4 !== peg$FAILED) {
                                s5 = peg$parse_();
                                if (s5 !== peg$FAILED) {
                                  if (input.charCodeAt(peg$currPos) === 44) {
                                    s6 = peg$c45;
                                    peg$currPos++;
                                  } else {
                                    s6 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                  }
                                  if (s6 !== peg$FAILED) {
                                    s7 = peg$parse_();
                                    if (s7 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 118) {
                                        s8 = peg$c41;
                                        peg$currPos++;
                                      } else {
                                        s8 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                      }
                                      if (s8 !== peg$FAILED) {
                                        if (peg$c43.test(input.charAt(peg$currPos))) {
                                          s9 = input.charAt(peg$currPos);
                                          peg$currPos++;
                                        } else {
                                          s9 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                        }
                                        if (s9 !== peg$FAILED) {
                                          peg$savedPos = s0;
                                          s1 = peg$c59(s9);
                                          s0 = s1;
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          s1 = peg$parse_();
                          if (s1 !== peg$FAILED) {
                            if (input.substr(peg$currPos, 2) === peg$c39) {
                              s2 = peg$c39;
                              peg$currPos += 2;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c40); }
                            }
                            if (s2 !== peg$FAILED) {
                              s3 = peg$parse_();
                              if (s3 !== peg$FAILED) {
                                if (input.substr(peg$currPos, 2) === peg$c60) {
                                  s4 = peg$c60;
                                  peg$currPos += 2;
                                } else {
                                  s4 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c61); }
                                }
                                if (s4 !== peg$FAILED) {
                                  s5 = peg$parse_();
                                  if (s5 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 44) {
                                      s6 = peg$c45;
                                      peg$currPos++;
                                    } else {
                                      s6 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                    }
                                    if (s6 !== peg$FAILED) {
                                      s7 = peg$parse_();
                                      if (s7 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 118) {
                                          s8 = peg$c41;
                                          peg$currPos++;
                                        } else {
                                          s8 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                        }
                                        if (s8 !== peg$FAILED) {
                                          if (peg$c43.test(input.charAt(peg$currPos))) {
                                            s9 = input.charAt(peg$currPos);
                                            peg$currPos++;
                                          } else {
                                            s9 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                          }
                                          if (s9 !== peg$FAILED) {
                                            peg$savedPos = s0;
                                            s1 = peg$c62(s9);
                                            s0 = s1;
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                          if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            s1 = peg$parse_();
                            if (s1 !== peg$FAILED) {
                              if (input.substr(peg$currPos, 2) === peg$c39) {
                                s2 = peg$c39;
                                peg$currPos += 2;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c40); }
                              }
                              if (s2 !== peg$FAILED) {
                                s3 = peg$parse_();
                                if (s3 !== peg$FAILED) {
                                  if (input.charCodeAt(peg$currPos) === 102) {
                                    s4 = peg$c63;
                                    peg$currPos++;
                                  } else {
                                    s4 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c64); }
                                  }
                                  if (s4 !== peg$FAILED) {
                                    s5 = peg$parse_();
                                    if (s5 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 44) {
                                        s6 = peg$c45;
                                        peg$currPos++;
                                      } else {
                                        s6 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                      }
                                      if (s6 !== peg$FAILED) {
                                        s7 = peg$parse_();
                                        if (s7 !== peg$FAILED) {
                                          if (input.charCodeAt(peg$currPos) === 118) {
                                            s8 = peg$c41;
                                            peg$currPos++;
                                          } else {
                                            s8 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                          }
                                          if (s8 !== peg$FAILED) {
                                            if (peg$c43.test(input.charAt(peg$currPos))) {
                                              s9 = input.charAt(peg$currPos);
                                              peg$currPos++;
                                            } else {
                                              s9 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                            }
                                            if (s9 !== peg$FAILED) {
                                              peg$savedPos = s0;
                                              s1 = peg$c65(s9);
                                              s0 = s1;
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              s1 = peg$parse_();
                              if (s1 !== peg$FAILED) {
                                if (input.substr(peg$currPos, 2) === peg$c39) {
                                  s2 = peg$c39;
                                  peg$currPos += 2;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                }
                                if (s2 !== peg$FAILED) {
                                  s3 = peg$parse_();
                                  if (s3 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 98) {
                                      s4 = peg$c66;
                                      peg$currPos++;
                                    } else {
                                      s4 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c67); }
                                    }
                                    if (s4 !== peg$FAILED) {
                                      s5 = peg$parse_();
                                      if (s5 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 44) {
                                          s6 = peg$c45;
                                          peg$currPos++;
                                        } else {
                                          s6 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                        }
                                        if (s6 !== peg$FAILED) {
                                          s7 = peg$parse_();
                                          if (s7 !== peg$FAILED) {
                                            if (input.charCodeAt(peg$currPos) === 118) {
                                              s8 = peg$c41;
                                              peg$currPos++;
                                            } else {
                                              s8 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                            }
                                            if (s8 !== peg$FAILED) {
                                              if (peg$c43.test(input.charAt(peg$currPos))) {
                                                s9 = input.charAt(peg$currPos);
                                                peg$currPos++;
                                              } else {
                                                s9 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                              }
                                              if (s9 !== peg$FAILED) {
                                                peg$savedPos = s0;
                                                s1 = peg$c68(s9);
                                                s0 = s1;
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                              if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                s1 = peg$parse_();
                                if (s1 !== peg$FAILED) {
                                  if (input.substr(peg$currPos, 2) === peg$c39) {
                                    s2 = peg$c39;
                                    peg$currPos += 2;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                  }
                                  if (s2 !== peg$FAILED) {
                                    s3 = peg$parse_();
                                    if (s3 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 3) === peg$c69) {
                                        s4 = peg$c69;
                                        peg$currPos += 3;
                                      } else {
                                        s4 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c70); }
                                      }
                                      if (s4 !== peg$FAILED) {
                                        s5 = peg$parse_();
                                        if (s5 !== peg$FAILED) {
                                          if (input.charCodeAt(peg$currPos) === 44) {
                                            s6 = peg$c45;
                                            peg$currPos++;
                                          } else {
                                            s6 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                          }
                                          if (s6 !== peg$FAILED) {
                                            s7 = peg$parse_();
                                            if (s7 !== peg$FAILED) {
                                              if (input.charCodeAt(peg$currPos) === 118) {
                                                s8 = peg$c41;
                                                peg$currPos++;
                                              } else {
                                                s8 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                              }
                                              if (s8 !== peg$FAILED) {
                                                if (peg$c43.test(input.charAt(peg$currPos))) {
                                                  s9 = input.charAt(peg$currPos);
                                                  peg$currPos++;
                                                } else {
                                                  s9 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                }
                                                if (s9 !== peg$FAILED) {
                                                  peg$savedPos = s0;
                                                  s1 = peg$c71(s9);
                                                  s0 = s1;
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = peg$currPos;
                                  s1 = peg$parse_();
                                  if (s1 !== peg$FAILED) {
                                    if (input.substr(peg$currPos, 2) === peg$c39) {
                                      s2 = peg$c39;
                                      peg$currPos += 2;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                    }
                                    if (s2 !== peg$FAILED) {
                                      s3 = peg$parse_();
                                      if (s3 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 118) {
                                          s4 = peg$c41;
                                          peg$currPos++;
                                        } else {
                                          s4 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                        }
                                        if (s4 !== peg$FAILED) {
                                          if (peg$c43.test(input.charAt(peg$currPos))) {
                                            s5 = input.charAt(peg$currPos);
                                            peg$currPos++;
                                          } else {
                                            s5 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                          }
                                          if (s5 !== peg$FAILED) {
                                            s6 = peg$parse_();
                                            if (s6 !== peg$FAILED) {
                                              if (input.charCodeAt(peg$currPos) === 44) {
                                                s7 = peg$c45;
                                                peg$currPos++;
                                              } else {
                                                s7 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                              }
                                              if (s7 !== peg$FAILED) {
                                                s8 = peg$parse_();
                                                if (s8 !== peg$FAILED) {
                                                  if (input.substr(peg$currPos, 3) === peg$c69) {
                                                    s9 = peg$c69;
                                                    peg$currPos += 3;
                                                  } else {
                                                    s9 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c70); }
                                                  }
                                                  if (s9 !== peg$FAILED) {
                                                    peg$savedPos = s0;
                                                    s1 = peg$c72(s5);
                                                    s0 = s1;
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    s1 = peg$parse_();
                                    if (s1 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 3) === peg$c73) {
                                        s2 = peg$c73;
                                        peg$currPos += 3;
                                      } else {
                                        s2 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                      }
                                      if (s2 !== peg$FAILED) {
                                        s3 = peg$parse_();
                                        if (s3 !== peg$FAILED) {
                                          if (input.charCodeAt(peg$currPos) === 118) {
                                            s4 = peg$c41;
                                            peg$currPos++;
                                          } else {
                                            s4 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                          }
                                          if (s4 !== peg$FAILED) {
                                            if (peg$c43.test(input.charAt(peg$currPos))) {
                                              s5 = input.charAt(peg$currPos);
                                              peg$currPos++;
                                            } else {
                                              s5 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                            }
                                            if (s5 !== peg$FAILED) {
                                              s6 = peg$parse_();
                                              if (s6 !== peg$FAILED) {
                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                  s7 = peg$c45;
                                                  peg$currPos++;
                                                } else {
                                                  s7 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                }
                                                if (s7 !== peg$FAILED) {
                                                  s8 = peg$parse_();
                                                  if (s8 !== peg$FAILED) {
                                                    s9 = peg$parseExpression();
                                                    if (s9 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c75(s5, s9);
                                                      s0 = s1;
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$currPos;
                                      s1 = peg$parse_();
                                      if (s1 !== peg$FAILED) {
                                        if (input.substr(peg$currPos, 3) === peg$c73) {
                                          s2 = peg$c73;
                                          peg$currPos += 3;
                                        } else {
                                          s2 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                        }
                                        if (s2 !== peg$FAILED) {
                                          s3 = peg$parse_();
                                          if (s3 !== peg$FAILED) {
                                            if (input.charCodeAt(peg$currPos) === 105) {
                                              s4 = peg$c55;
                                              peg$currPos++;
                                            } else {
                                              s4 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c56); }
                                            }
                                            if (s4 !== peg$FAILED) {
                                              s5 = peg$parse_();
                                              if (s5 !== peg$FAILED) {
                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                  s6 = peg$c45;
                                                  peg$currPos++;
                                                } else {
                                                  s6 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                }
                                                if (s6 !== peg$FAILED) {
                                                  s7 = peg$parse_();
                                                  if (s7 !== peg$FAILED) {
                                                    if (input.charCodeAt(peg$currPos) === 118) {
                                                      s8 = peg$c41;
                                                      peg$currPos++;
                                                    } else {
                                                      s8 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                    }
                                                    if (s8 !== peg$FAILED) {
                                                      if (peg$c43.test(input.charAt(peg$currPos))) {
                                                        s9 = input.charAt(peg$currPos);
                                                        peg$currPos++;
                                                      } else {
                                                        s9 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                      }
                                                      if (s9 !== peg$FAILED) {
                                                        peg$savedPos = s0;
                                                        s1 = peg$c76(s9);
                                                        s0 = s1;
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$currPos;
                                        s1 = peg$parse_();
                                        if (s1 !== peg$FAILED) {
                                          if (input.substr(peg$currPos, 2) === peg$c77) {
                                            s2 = peg$c77;
                                            peg$currPos += 2;
                                          } else {
                                            s2 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c78); }
                                          }
                                          if (s2 !== peg$FAILED) {
                                            s3 = peg$parse_();
                                            if (s3 !== peg$FAILED) {
                                              if (input.charCodeAt(peg$currPos) === 118) {
                                                s4 = peg$c41;
                                                peg$currPos++;
                                              } else {
                                                s4 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                              }
                                              if (s4 !== peg$FAILED) {
                                                if (peg$c43.test(input.charAt(peg$currPos))) {
                                                  s5 = input.charAt(peg$currPos);
                                                  peg$currPos++;
                                                } else {
                                                  s5 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                }
                                                if (s5 !== peg$FAILED) {
                                                  s6 = peg$parse_();
                                                  if (s6 !== peg$FAILED) {
                                                    if (input.charCodeAt(peg$currPos) === 44) {
                                                      s7 = peg$c45;
                                                      peg$currPos++;
                                                    } else {
                                                      s7 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                    }
                                                    if (s7 !== peg$FAILED) {
                                                      s8 = peg$parse_();
                                                      if (s8 !== peg$FAILED) {
                                                        s9 = peg$parseExpression();
                                                        if (s9 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c79(s5, s9);
                                                          s0 = s1;
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = peg$currPos;
                                          s1 = peg$parse_();
                                          if (s1 !== peg$FAILED) {
                                            if (input.substr(peg$currPos, 3) === peg$c80) {
                                              s2 = peg$c80;
                                              peg$currPos += 3;
                                            } else {
                                              s2 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c81); }
                                            }
                                            if (s2 !== peg$FAILED) {
                                              s3 = peg$parse_();
                                              if (s3 !== peg$FAILED) {
                                                if (input.charCodeAt(peg$currPos) === 118) {
                                                  s4 = peg$c41;
                                                  peg$currPos++;
                                                } else {
                                                  s4 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                }
                                                if (s4 !== peg$FAILED) {
                                                  if (peg$c43.test(input.charAt(peg$currPos))) {
                                                    s5 = input.charAt(peg$currPos);
                                                    peg$currPos++;
                                                  } else {
                                                    s5 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                  }
                                                  if (s5 !== peg$FAILED) {
                                                    s6 = peg$parse_();
                                                    if (s6 !== peg$FAILED) {
                                                      if (input.charCodeAt(peg$currPos) === 44) {
                                                        s7 = peg$c45;
                                                        peg$currPos++;
                                                      } else {
                                                        s7 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                      }
                                                      if (s7 !== peg$FAILED) {
                                                        s8 = peg$parse_();
                                                        if (s8 !== peg$FAILED) {
                                                          s9 = peg$parseExpression();
                                                          if (s9 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c82(s5, s9);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$currPos;
                                            s1 = peg$parse_();
                                            if (s1 !== peg$FAILED) {
                                              if (input.substr(peg$currPos, 2) === peg$c77) {
                                                s2 = peg$c77;
                                                peg$currPos += 2;
                                              } else {
                                                s2 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c78); }
                                              }
                                              if (s2 !== peg$FAILED) {
                                                s3 = peg$parse_();
                                                if (s3 !== peg$FAILED) {
                                                  if (input.charCodeAt(peg$currPos) === 118) {
                                                    s4 = peg$c41;
                                                    peg$currPos++;
                                                  } else {
                                                    s4 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                  }
                                                  if (s4 !== peg$FAILED) {
                                                    if (peg$c43.test(input.charAt(peg$currPos))) {
                                                      s5 = input.charAt(peg$currPos);
                                                      peg$currPos++;
                                                    } else {
                                                      s5 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                    }
                                                    if (s5 !== peg$FAILED) {
                                                      s6 = peg$parse_();
                                                      if (s6 !== peg$FAILED) {
                                                        if (input.charCodeAt(peg$currPos) === 44) {
                                                          s7 = peg$c45;
                                                          peg$currPos++;
                                                        } else {
                                                          s7 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                        }
                                                        if (s7 !== peg$FAILED) {
                                                          s8 = peg$parse_();
                                                          if (s8 !== peg$FAILED) {
                                                            if (input.charCodeAt(peg$currPos) === 118) {
                                                              s9 = peg$c41;
                                                              peg$currPos++;
                                                            } else {
                                                              s9 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                            }
                                                            if (s9 !== peg$FAILED) {
                                                              if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                s10 = input.charAt(peg$currPos);
                                                                peg$currPos++;
                                                              } else {
                                                                s10 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                              }
                                                              if (s10 !== peg$FAILED) {
                                                                peg$savedPos = s0;
                                                                s1 = peg$c83(s5, s10);
                                                                s0 = s1;
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$currPos;
                                              s1 = peg$parse_();
                                              if (s1 !== peg$FAILED) {
                                                if (input.substr(peg$currPos, 2) === peg$c84) {
                                                  s2 = peg$c84;
                                                  peg$currPos += 2;
                                                } else {
                                                  s2 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c85); }
                                                }
                                                if (s2 !== peg$FAILED) {
                                                  s3 = peg$parse_();
                                                  if (s3 !== peg$FAILED) {
                                                    if (input.charCodeAt(peg$currPos) === 118) {
                                                      s4 = peg$c41;
                                                      peg$currPos++;
                                                    } else {
                                                      s4 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                    }
                                                    if (s4 !== peg$FAILED) {
                                                      if (peg$c43.test(input.charAt(peg$currPos))) {
                                                        s5 = input.charAt(peg$currPos);
                                                        peg$currPos++;
                                                      } else {
                                                        s5 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                      }
                                                      if (s5 !== peg$FAILED) {
                                                        s6 = peg$parse_();
                                                        if (s6 !== peg$FAILED) {
                                                          if (input.charCodeAt(peg$currPos) === 44) {
                                                            s7 = peg$c45;
                                                            peg$currPos++;
                                                          } else {
                                                            s7 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                          }
                                                          if (s7 !== peg$FAILED) {
                                                            s8 = peg$parse_();
                                                            if (s8 !== peg$FAILED) {
                                                              if (input.charCodeAt(peg$currPos) === 118) {
                                                                s9 = peg$c41;
                                                                peg$currPos++;
                                                              } else {
                                                                s9 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                              }
                                                              if (s9 !== peg$FAILED) {
                                                                if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                  s10 = input.charAt(peg$currPos);
                                                                  peg$currPos++;
                                                                } else {
                                                                  s10 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                }
                                                                if (s10 !== peg$FAILED) {
                                                                  peg$savedPos = s0;
                                                                  s1 = peg$c86(s5, s10);
                                                                  s0 = s1;
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$currPos;
                                                s1 = peg$parse_();
                                                if (s1 !== peg$FAILED) {
                                                  if (input.substr(peg$currPos, 3) === peg$c87) {
                                                    s2 = peg$c87;
                                                    peg$currPos += 3;
                                                  } else {
                                                    s2 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c88); }
                                                  }
                                                  if (s2 !== peg$FAILED) {
                                                    s3 = peg$parse_();
                                                    if (s3 !== peg$FAILED) {
                                                      if (input.charCodeAt(peg$currPos) === 118) {
                                                        s4 = peg$c41;
                                                        peg$currPos++;
                                                      } else {
                                                        s4 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                      }
                                                      if (s4 !== peg$FAILED) {
                                                        if (peg$c43.test(input.charAt(peg$currPos))) {
                                                          s5 = input.charAt(peg$currPos);
                                                          peg$currPos++;
                                                        } else {
                                                          s5 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                        }
                                                        if (s5 !== peg$FAILED) {
                                                          s6 = peg$parse_();
                                                          if (s6 !== peg$FAILED) {
                                                            if (input.charCodeAt(peg$currPos) === 44) {
                                                              s7 = peg$c45;
                                                              peg$currPos++;
                                                            } else {
                                                              s7 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                            }
                                                            if (s7 !== peg$FAILED) {
                                                              s8 = peg$parse_();
                                                              if (s8 !== peg$FAILED) {
                                                                if (input.charCodeAt(peg$currPos) === 118) {
                                                                  s9 = peg$c41;
                                                                  peg$currPos++;
                                                                } else {
                                                                  s9 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                }
                                                                if (s9 !== peg$FAILED) {
                                                                  if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                    s10 = input.charAt(peg$currPos);
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s10 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                  }
                                                                  if (s10 !== peg$FAILED) {
                                                                    peg$savedPos = s0;
                                                                    s1 = peg$c89(s5, s10);
                                                                    s0 = s1;
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = peg$currPos;
                                                  s1 = peg$parse_();
                                                  if (s1 !== peg$FAILED) {
                                                    if (input.substr(peg$currPos, 3) === peg$c90) {
                                                      s2 = peg$c90;
                                                      peg$currPos += 3;
                                                    } else {
                                                      s2 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c91); }
                                                    }
                                                    if (s2 !== peg$FAILED) {
                                                      s3 = peg$parse_();
                                                      if (s3 !== peg$FAILED) {
                                                        if (input.charCodeAt(peg$currPos) === 118) {
                                                          s4 = peg$c41;
                                                          peg$currPos++;
                                                        } else {
                                                          s4 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                        }
                                                        if (s4 !== peg$FAILED) {
                                                          if (peg$c43.test(input.charAt(peg$currPos))) {
                                                            s5 = input.charAt(peg$currPos);
                                                            peg$currPos++;
                                                          } else {
                                                            s5 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                          }
                                                          if (s5 !== peg$FAILED) {
                                                            s6 = peg$parse_();
                                                            if (s6 !== peg$FAILED) {
                                                              if (input.charCodeAt(peg$currPos) === 44) {
                                                                s7 = peg$c45;
                                                                peg$currPos++;
                                                              } else {
                                                                s7 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                              }
                                                              if (s7 !== peg$FAILED) {
                                                                s8 = peg$parse_();
                                                                if (s8 !== peg$FAILED) {
                                                                  if (input.charCodeAt(peg$currPos) === 118) {
                                                                    s9 = peg$c41;
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s9 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                  }
                                                                  if (s9 !== peg$FAILED) {
                                                                    if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                      s10 = input.charAt(peg$currPos);
                                                                      peg$currPos++;
                                                                    } else {
                                                                      s10 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                    }
                                                                    if (s10 !== peg$FAILED) {
                                                                      peg$savedPos = s0;
                                                                      s1 = peg$c92(s5, s10);
                                                                      s0 = s1;
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = peg$currPos;
                                                    s1 = peg$parse_();
                                                    if (s1 !== peg$FAILED) {
                                                      if (input.substr(peg$currPos, 3) === peg$c73) {
                                                        s2 = peg$c73;
                                                        peg$currPos += 3;
                                                      } else {
                                                        s2 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                      }
                                                      if (s2 !== peg$FAILED) {
                                                        s3 = peg$parse_();
                                                        if (s3 !== peg$FAILED) {
                                                          if (input.charCodeAt(peg$currPos) === 118) {
                                                            s4 = peg$c41;
                                                            peg$currPos++;
                                                          } else {
                                                            s4 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                          }
                                                          if (s4 !== peg$FAILED) {
                                                            if (peg$c43.test(input.charAt(peg$currPos))) {
                                                              s5 = input.charAt(peg$currPos);
                                                              peg$currPos++;
                                                            } else {
                                                              s5 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                            }
                                                            if (s5 !== peg$FAILED) {
                                                              s6 = peg$parse_();
                                                              if (s6 !== peg$FAILED) {
                                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                                  s7 = peg$c45;
                                                                  peg$currPos++;
                                                                } else {
                                                                  s7 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                }
                                                                if (s7 !== peg$FAILED) {
                                                                  s8 = peg$parse_();
                                                                  if (s8 !== peg$FAILED) {
                                                                    if (input.charCodeAt(peg$currPos) === 118) {
                                                                      s9 = peg$c41;
                                                                      peg$currPos++;
                                                                    } else {
                                                                      s9 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                    }
                                                                    if (s9 !== peg$FAILED) {
                                                                      if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                        s10 = input.charAt(peg$currPos);
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s10 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                      }
                                                                      if (s10 !== peg$FAILED) {
                                                                        peg$savedPos = s0;
                                                                        s1 = peg$c93(s5, s10);
                                                                        s0 = s1;
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = peg$currPos;
                                                      s1 = peg$parse_();
                                                      if (s1 !== peg$FAILED) {
                                                        if (input.substr(peg$currPos, 4) === peg$c94) {
                                                          s2 = peg$c94;
                                                          peg$currPos += 4;
                                                        } else {
                                                          s2 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c95); }
                                                        }
                                                        if (s2 !== peg$FAILED) {
                                                          s3 = peg$parse_();
                                                          if (s3 !== peg$FAILED) {
                                                            if (input.charCodeAt(peg$currPos) === 118) {
                                                              s4 = peg$c41;
                                                              peg$currPos++;
                                                            } else {
                                                              s4 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                            }
                                                            if (s4 !== peg$FAILED) {
                                                              if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                s5 = input.charAt(peg$currPos);
                                                                peg$currPos++;
                                                              } else {
                                                                s5 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                              }
                                                              if (s5 !== peg$FAILED) {
                                                                s6 = peg$parse_();
                                                                if (s6 !== peg$FAILED) {
                                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                                    s7 = peg$c45;
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s7 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                  }
                                                                  if (s7 !== peg$FAILED) {
                                                                    s8 = peg$parse_();
                                                                    if (s8 !== peg$FAILED) {
                                                                      if (input.charCodeAt(peg$currPos) === 118) {
                                                                        s9 = peg$c41;
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s9 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                      }
                                                                      if (s9 !== peg$FAILED) {
                                                                        if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                          s10 = input.charAt(peg$currPos);
                                                                          peg$currPos++;
                                                                        } else {
                                                                          s10 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                        }
                                                                        if (s10 !== peg$FAILED) {
                                                                          peg$savedPos = s0;
                                                                          s1 = peg$c96(s5, s10);
                                                                          s0 = s1;
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = peg$currPos;
                                                        s1 = peg$parse_();
                                                        if (s1 !== peg$FAILED) {
                                                          if (input.substr(peg$currPos, 3) === peg$c97) {
                                                            s2 = peg$c97;
                                                            peg$currPos += 3;
                                                          } else {
                                                            s2 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c98); }
                                                          }
                                                          if (s2 !== peg$FAILED) {
                                                            s3 = peg$parse_();
                                                            if (s3 !== peg$FAILED) {
                                                              if (input.charCodeAt(peg$currPos) === 118) {
                                                                s4 = peg$c41;
                                                                peg$currPos++;
                                                              } else {
                                                                s4 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                              }
                                                              if (s4 !== peg$FAILED) {
                                                                if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                  s5 = input.charAt(peg$currPos);
                                                                  peg$currPos++;
                                                                } else {
                                                                  s5 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                }
                                                                if (s5 !== peg$FAILED) {
                                                                  peg$savedPos = s0;
                                                                  s1 = peg$c99(s5);
                                                                  s0 = s1;
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = peg$currPos;
                                                          s1 = peg$parse_();
                                                          if (s1 !== peg$FAILED) {
                                                            if (input.substr(peg$currPos, 3) === peg$c100) {
                                                              s2 = peg$c100;
                                                              peg$currPos += 3;
                                                            } else {
                                                              s2 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c101); }
                                                            }
                                                            if (s2 !== peg$FAILED) {
                                                              s3 = peg$parse_();
                                                              if (s3 !== peg$FAILED) {
                                                                if (input.charCodeAt(peg$currPos) === 118) {
                                                                  s4 = peg$c41;
                                                                  peg$currPos++;
                                                                } else {
                                                                  s4 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                }
                                                                if (s4 !== peg$FAILED) {
                                                                  if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                    s5 = input.charAt(peg$currPos);
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s5 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                  }
                                                                  if (s5 !== peg$FAILED) {
                                                                    s6 = peg$parse_();
                                                                    if (s6 !== peg$FAILED) {
                                                                      if (input.charCodeAt(peg$currPos) === 44) {
                                                                        s7 = peg$c45;
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s7 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                      }
                                                                      if (s7 !== peg$FAILED) {
                                                                        s8 = peg$parse_();
                                                                        if (s8 !== peg$FAILED) {
                                                                          if (input.charCodeAt(peg$currPos) === 118) {
                                                                            s9 = peg$c41;
                                                                            peg$currPos++;
                                                                          } else {
                                                                            s9 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                          }
                                                                          if (s9 !== peg$FAILED) {
                                                                            if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                              s10 = input.charAt(peg$currPos);
                                                                              peg$currPos++;
                                                                            } else {
                                                                              s10 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                            }
                                                                            if (s10 !== peg$FAILED) {
                                                                              peg$savedPos = s0;
                                                                              s1 = peg$c102(s5, s10);
                                                                              s0 = s1;
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            s0 = peg$currPos;
                                                            s1 = peg$parse_();
                                                            if (s1 !== peg$FAILED) {
                                                              if (input.substr(peg$currPos, 3) === peg$c103) {
                                                                s2 = peg$c103;
                                                                peg$currPos += 3;
                                                              } else {
                                                                s2 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c104); }
                                                              }
                                                              if (s2 !== peg$FAILED) {
                                                                s3 = peg$parse_();
                                                                if (s3 !== peg$FAILED) {
                                                                  if (input.charCodeAt(peg$currPos) === 118) {
                                                                    s4 = peg$c41;
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s4 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                  }
                                                                  if (s4 !== peg$FAILED) {
                                                                    if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                      s5 = input.charAt(peg$currPos);
                                                                      peg$currPos++;
                                                                    } else {
                                                                      s5 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                    }
                                                                    if (s5 !== peg$FAILED) {
                                                                      peg$savedPos = s0;
                                                                      s1 = peg$c105(s5);
                                                                      s0 = s1;
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              s0 = peg$currPos;
                                                              s1 = peg$parse_();
                                                              if (s1 !== peg$FAILED) {
                                                                if (input.substr(peg$currPos, 3) === peg$c80) {
                                                                  s2 = peg$c80;
                                                                  peg$currPos += 3;
                                                                } else {
                                                                  s2 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c81); }
                                                                }
                                                                if (s2 !== peg$FAILED) {
                                                                  s3 = peg$parse_();
                                                                  if (s3 !== peg$FAILED) {
                                                                    if (input.charCodeAt(peg$currPos) === 118) {
                                                                      s4 = peg$c41;
                                                                      peg$currPos++;
                                                                    } else {
                                                                      s4 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                    }
                                                                    if (s4 !== peg$FAILED) {
                                                                      if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                        s5 = input.charAt(peg$currPos);
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s5 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                      }
                                                                      if (s5 !== peg$FAILED) {
                                                                        s6 = peg$parse_();
                                                                        if (s6 !== peg$FAILED) {
                                                                          if (input.charCodeAt(peg$currPos) === 44) {
                                                                            s7 = peg$c45;
                                                                            peg$currPos++;
                                                                          } else {
                                                                            s7 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                          }
                                                                          if (s7 !== peg$FAILED) {
                                                                            s8 = peg$parse_();
                                                                            if (s8 !== peg$FAILED) {
                                                                              if (input.charCodeAt(peg$currPos) === 118) {
                                                                                s9 = peg$c41;
                                                                                peg$currPos++;
                                                                              } else {
                                                                                s9 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                              }
                                                                              if (s9 !== peg$FAILED) {
                                                                                if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                                  s10 = input.charAt(peg$currPos);
                                                                                  peg$currPos++;
                                                                                } else {
                                                                                  s10 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                                }
                                                                                if (s10 !== peg$FAILED) {
                                                                                  peg$savedPos = s0;
                                                                                  s1 = peg$c106(s5, s10);
                                                                                  s0 = s1;
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                s0 = peg$currPos;
                                                                s1 = peg$parse_();
                                                                if (s1 !== peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 3) === peg$c107) {
                                                                    s2 = peg$c107;
                                                                    peg$currPos += 3;
                                                                  } else {
                                                                    s2 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c108); }
                                                                  }
                                                                  if (s2 !== peg$FAILED) {
                                                                    s3 = peg$parse_();
                                                                    if (s3 !== peg$FAILED) {
                                                                      if (input.charCodeAt(peg$currPos) === 118) {
                                                                        s4 = peg$c41;
                                                                        peg$currPos++;
                                                                      } else {
                                                                        s4 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                      }
                                                                      if (s4 !== peg$FAILED) {
                                                                        if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                          s5 = input.charAt(peg$currPos);
                                                                          peg$currPos++;
                                                                        } else {
                                                                          s5 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                        }
                                                                        if (s5 !== peg$FAILED) {
                                                                          s6 = peg$parse_();
                                                                          if (s6 !== peg$FAILED) {
                                                                            if (input.charCodeAt(peg$currPos) === 44) {
                                                                              s7 = peg$c45;
                                                                              peg$currPos++;
                                                                            } else {
                                                                              s7 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                            }
                                                                            if (s7 !== peg$FAILED) {
                                                                              s8 = peg$parse_();
                                                                              if (s8 !== peg$FAILED) {
                                                                                if (input.charCodeAt(peg$currPos) === 118) {
                                                                                  s9 = peg$c41;
                                                                                  peg$currPos++;
                                                                                } else {
                                                                                  s9 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                                }
                                                                                if (s9 !== peg$FAILED) {
                                                                                  if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                                    s10 = input.charAt(peg$currPos);
                                                                                    peg$currPos++;
                                                                                  } else {
                                                                                    s10 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                                  }
                                                                                  if (s10 !== peg$FAILED) {
                                                                                    s11 = peg$parse_();
                                                                                    if (s11 !== peg$FAILED) {
                                                                                      if (input.charCodeAt(peg$currPos) === 44) {
                                                                                        s12 = peg$c45;
                                                                                        peg$currPos++;
                                                                                      } else {
                                                                                        s12 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                                      }
                                                                                      if (s12 !== peg$FAILED) {
                                                                                        s13 = peg$parse_();
                                                                                        if (s13 !== peg$FAILED) {
                                                                                          s14 = peg$parseExpression();
                                                                                          if (s14 !== peg$FAILED) {
                                                                                            peg$savedPos = s0;
                                                                                            s1 = peg$c109(s5, s10, s14);
                                                                                            s0 = s1;
                                                                                          } else {
                                                                                            peg$currPos = s0;
                                                                                            s0 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = peg$currPos;
                                                                  s1 = peg$parse_();
                                                                  if (s1 !== peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 3) === peg$c110) {
                                                                      s2 = peg$c110;
                                                                      peg$currPos += 3;
                                                                    } else {
                                                                      s2 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c111); }
                                                                    }
                                                                    if (s2 !== peg$FAILED) {
                                                                      s3 = peg$parse_();
                                                                      if (s3 !== peg$FAILED) {
                                                                        if (input.charCodeAt(peg$currPos) === 118) {
                                                                          s4 = peg$c41;
                                                                          peg$currPos++;
                                                                        } else {
                                                                          s4 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                        }
                                                                        if (s4 !== peg$FAILED) {
                                                                          if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                            s5 = input.charAt(peg$currPos);
                                                                            peg$currPos++;
                                                                          } else {
                                                                            s5 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                          }
                                                                          if (s5 !== peg$FAILED) {
                                                                            s6 = peg$parse_();
                                                                            if (s6 !== peg$FAILED) {
                                                                              if (input.charCodeAt(peg$currPos) === 44) {
                                                                                s7 = peg$c45;
                                                                                peg$currPos++;
                                                                              } else {
                                                                                s7 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                              }
                                                                              if (s7 !== peg$FAILED) {
                                                                                s8 = peg$parse_();
                                                                                if (s8 !== peg$FAILED) {
                                                                                  s9 = peg$parseExpression();
                                                                                  if (s9 !== peg$FAILED) {
                                                                                    peg$savedPos = s0;
                                                                                    s1 = peg$c112(s5, s9);
                                                                                    s0 = s1;
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = peg$currPos;
                                                                    s1 = peg$parse_();
                                                                    if (s1 !== peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 3) === peg$c113) {
                                                                        s2 = peg$c113;
                                                                        peg$currPos += 3;
                                                                      } else {
                                                                        s2 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c114); }
                                                                      }
                                                                      if (s2 !== peg$FAILED) {
                                                                        s3 = peg$parse_();
                                                                        if (s3 !== peg$FAILED) {
                                                                          if (input.charCodeAt(peg$currPos) === 118) {
                                                                            s4 = peg$c41;
                                                                            peg$currPos++;
                                                                          } else {
                                                                            s4 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                          }
                                                                          if (s4 !== peg$FAILED) {
                                                                            if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                              s5 = input.charAt(peg$currPos);
                                                                              peg$currPos++;
                                                                            } else {
                                                                              s5 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                            }
                                                                            if (s5 !== peg$FAILED) {
                                                                              peg$savedPos = s0;
                                                                              s1 = peg$c115(s5);
                                                                              s0 = s1;
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = peg$currPos;
                                                                      s1 = peg$parse_();
                                                                      if (s1 !== peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 4) === peg$c116) {
                                                                          s2 = peg$c116;
                                                                          peg$currPos += 4;
                                                                        } else {
                                                                          s2 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c117); }
                                                                        }
                                                                        if (s2 !== peg$FAILED) {
                                                                          s3 = peg$parse_();
                                                                          if (s3 !== peg$FAILED) {
                                                                            if (input.charCodeAt(peg$currPos) === 118) {
                                                                              s4 = peg$c41;
                                                                              peg$currPos++;
                                                                            } else {
                                                                              s4 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c42); }
                                                                            }
                                                                            if (s4 !== peg$FAILED) {
                                                                              if (peg$c43.test(input.charAt(peg$currPos))) {
                                                                                s5 = input.charAt(peg$currPos);
                                                                                peg$currPos++;
                                                                              } else {
                                                                                s5 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c44); }
                                                                              }
                                                                              if (s5 !== peg$FAILED) {
                                                                                peg$savedPos = s0;
                                                                                s1 = peg$c118(s5);
                                                                                s0 = s1;
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = peg$currPos;
                                                                        s1 = peg$parse_();
                                                                        if (s1 !== peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 4) === peg$c119) {
                                                                            s2 = peg$c119;
                                                                            peg$currPos += 4;
                                                                          } else {
                                                                            s2 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c120); }
                                                                          }
                                                                          if (s2 !== peg$FAILED) {
                                                                            s3 = peg$parse_();
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parseLabelPtr();
                                                                              if (s4 !== peg$FAILED) {
                                                                                peg$savedPos = s0;
                                                                                s1 = peg$c121(s4);
                                                                                s0 = s1;
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = peg$currPos;
                                                                          s1 = peg$parse_();
                                                                          if (s1 !== peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 4) === peg$c119) {
                                                                              s2 = peg$c119;
                                                                              peg$currPos += 4;
                                                                            } else {
                                                                              s2 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c120); }
                                                                            }
                                                                            if (s2 !== peg$FAILED) {
                                                                              s3 = peg$parse_();
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parseExpression();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  peg$savedPos = s0;
                                                                                  s1 = peg$c122(s4);
                                                                                  s0 = s1;
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = peg$currPos;
                                                                            s1 = peg$parse_();
                                                                            if (s1 !== peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 2) === peg$c123) {
                                                                                s2 = peg$c123;
                                                                                peg$currPos += 2;
                                                                              } else {
                                                                                s2 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c124); }
                                                                              }
                                                                              if (s2 !== peg$FAILED) {
                                                                                s3 = peg$parse_();
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parseLabelPtr();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    peg$savedPos = s0;
                                                                                    s1 = peg$c125(s4);
                                                                                    s0 = s1;
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = peg$currPos;
                                                                              s1 = peg$parse_();
                                                                              if (s1 !== peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 2) === peg$c123) {
                                                                                  s2 = peg$c123;
                                                                                  peg$currPos += 2;
                                                                                } else {
                                                                                  s2 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c124); }
                                                                                }
                                                                                if (s2 !== peg$FAILED) {
                                                                                  s3 = peg$parse_();
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    s4 = peg$parseExpression();
                                                                                    if (s4 !== peg$FAILED) {
                                                                                      peg$savedPos = s0;
                                                                                      s1 = peg$c126(s4);
                                                                                      s0 = s1;
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                s0 = peg$currPos;
                                                                                s1 = peg$parse_();
                                                                                if (s1 !== peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 2) === peg$c123) {
                                                                                    s2 = peg$c123;
                                                                                    peg$currPos += 2;
                                                                                  } else {
                                                                                    s2 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c124); }
                                                                                  }
                                                                                  if (s2 !== peg$FAILED) {
                                                                                    s3 = peg$parse_();
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 2) === peg$c127) {
                                                                                        s4 = peg$c127;
                                                                                        peg$currPos += 2;
                                                                                      } else {
                                                                                        s4 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c128); }
                                                                                      }
                                                                                      if (s4 !== peg$FAILED) {
                                                                                        s5 = peg$parse_();
                                                                                        if (s5 !== peg$FAILED) {
                                                                                          if (input.charCodeAt(peg$currPos) === 44) {
                                                                                            s6 = peg$c45;
                                                                                            peg$currPos++;
                                                                                          } else {
                                                                                            s6 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                                          }
                                                                                          if (s6 !== peg$FAILED) {
                                                                                            s7 = peg$parse_();
                                                                                            if (s7 !== peg$FAILED) {
                                                                                              s8 = peg$parseLabelPtr();
                                                                                              if (s8 !== peg$FAILED) {
                                                                                                peg$savedPos = s0;
                                                                                                s1 = peg$c129(s8);
                                                                                                s0 = s1;
                                                                                              } else {
                                                                                                peg$currPos = s0;
                                                                                                s0 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s0;
                                                                                              s0 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s0;
                                                                                            s0 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  s0 = peg$currPos;
                                                                                  s1 = peg$parse_();
                                                                                  if (s1 !== peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 2) === peg$c123) {
                                                                                      s2 = peg$c123;
                                                                                      peg$currPos += 2;
                                                                                    } else {
                                                                                      s2 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c124); }
                                                                                    }
                                                                                    if (s2 !== peg$FAILED) {
                                                                                      s3 = peg$parse_();
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 2) === peg$c127) {
                                                                                          s4 = peg$c127;
                                                                                          peg$currPos += 2;
                                                                                        } else {
                                                                                          s4 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c128); }
                                                                                        }
                                                                                        if (s4 !== peg$FAILED) {
                                                                                          s5 = peg$parse_();
                                                                                          if (s5 !== peg$FAILED) {
                                                                                            if (input.charCodeAt(peg$currPos) === 44) {
                                                                                              s6 = peg$c45;
                                                                                              peg$currPos++;
                                                                                            } else {
                                                                                              s6 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c46); }
                                                                                            }
                                                                                            if (s6 !== peg$FAILED) {
                                                                                              s7 = peg$parse_();
                                                                                              if (s7 !== peg$FAILED) {
                                                                                                s8 = peg$parseExpression();
                                                                                                if (s8 !== peg$FAILED) {
                                                                                                  peg$savedPos = s0;
                                                                                                  s1 = peg$c130(s8);
                                                                                                  s0 = s1;
                                                                                                } else {
                                                                                                  peg$currPos = s0;
                                                                                                  s0 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s0;
                                                                                                s0 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s0;
                                                                                              s0 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s0;
                                                                                            s0 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseString() {
      var s0, s1, s2, s3, s4, s5;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        if (peg$c132.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c133); }
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          if (peg$c134.test(input.charAt(peg$currPos))) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c135); }
          }
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            if (peg$c134.test(input.charAt(peg$currPos))) {
              s5 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c135); }
            }
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c136(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c131); }
      }

      return s0;
    }

    function peg$parseInteger() {
      var s0, s1, s2, s3, s4;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c138) {
          s2 = peg$c138;
          peg$currPos += 2;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c139); }
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          if (peg$c140.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c141); }
          }
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              if (peg$c140.test(input.charAt(peg$currPos))) {
                s4 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c141); }
              }
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c142();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parse_();
        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 48) {
            s2 = peg$c143;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c144); }
          }
          if (s2 !== peg$FAILED) {
            s3 = [];
            if (peg$c145.test(input.charAt(peg$currPos))) {
              s4 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c146); }
            }
            if (s4 !== peg$FAILED) {
              while (s4 !== peg$FAILED) {
                s3.push(s4);
                if (peg$c145.test(input.charAt(peg$currPos))) {
                  s4 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c146); }
                }
              }
            } else {
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c147();
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parse_();
          if (s1 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 45) {
              s2 = peg$c17;
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c18); }
            }
            if (s2 === peg$FAILED) {
              s2 = null;
            }
            if (s2 !== peg$FAILED) {
              s3 = [];
              if (peg$c148.test(input.charAt(peg$currPos))) {
                s4 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c149); }
              }
              if (s4 !== peg$FAILED) {
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  if (peg$c148.test(input.charAt(peg$currPos))) {
                    s4 = input.charAt(peg$currPos);
                    peg$currPos++;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c149); }
                  }
                }
              } else {
                s3 = peg$FAILED;
              }
              if (s3 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c150();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c137); }
      }

      return s0;
    }

    function peg$parseComment() {
      var s0, s1, s2, s3;

      peg$silentFails++;
      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 59) {
        s1 = peg$c152;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c153); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c154.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c155); }
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          if (peg$c154.test(input.charAt(peg$currPos))) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c155); }
          }
        }
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c151); }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (peg$c157.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c158); }
      }
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        if (peg$c157.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c158); }
        }
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c156); }
      }

      return s0;
    }


    var offset = 0;
    var labels = {};
    var program = [];

    function assemble(output) {
    	let prog = output.filter(el => el.value != null);
        var bin = new Uint8Array(0x1000 - 0x200);
    	for(var i = 0; i < prog.length; i++) {
        	if(prog[i].ptr != null) {
            	prog[i].value |= (0x200 + labels[prog[i].ptr]);
                prog[i].ptr = null;
            }
            if(prog[i].byte == null) {
            	bin[prog[i].offset] = (prog[i].value >> 8);
            	bin[prog[i].offset + 1] = (prog[i].value & 0xFF);
            } else {
            	bin[prog[i].offset] = (prog[i].value & 0xFF);
            }
        }
        return bin;
    }


    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(
        peg$maxFailExpected,
        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
        peg$maxFailPos < input.length
          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
      );
    }
  }

  return {
    SyntaxError: peg$SyntaxError,
    parse:       peg$parse
  };
})();
